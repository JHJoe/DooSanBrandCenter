//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 템플릿에서 생성되었습니다.
//
//     이 파일을 수동으로 변경하면 응용 프로그램에서 예기치 않은 동작이 발생할 수 있습니다.
//     이 파일을 수동으로 변경하면 코드가 다시 생성될 때 변경 내용을 덮어씁니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DooSan.BrandCenter.BrandCenterDBConext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BrandCenterEntities2 : DbContext
    {
        public BrandCenterEntities2()
            : base("name=BrandCenterEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_Company> tb_Company { get; set; }
        public virtual DbSet<tb_Dept> tb_Dept { get; set; }
        public virtual DbSet<tb_Duty> tb_Duty { get; set; }
        public virtual DbSet<tb_Job> tb_Job { get; set; }
        public virtual DbSet<tb_Rank> tb_Rank { get; set; }
        public virtual DbSet<tb_User> tb_User { get; set; }
        public virtual DbSet<tb_UserLang> tb_UserLang { get; set; }
        public virtual DbSet<tblButton> tblButton { get; set; }
        public virtual DbSet<tblCIApprove> tblCIApprove { get; set; }
        public virtual DbSet<tblCIApproveFiles> tblCIApproveFiles { get; set; }
        public virtual DbSet<tblCIApproveReview> tblCIApproveReview { get; set; }
        public virtual DbSet<tblCIApproveReviewFiles> tblCIApproveReviewFiles { get; set; }
        public virtual DbSet<tblCodeMaster> tblCodeMaster { get; set; }
        public virtual DbSet<tblGroup> tblGroup { get; set; }
        public virtual DbSet<tblGroupButton> tblGroupButton { get; set; }
        public virtual DbSet<tblGroupMenu> tblGroupMenu { get; set; }
        public virtual DbSet<tblGroupUser> tblGroupUser { get; set; }
        public virtual DbSet<tblLoginHistory> tblLoginHistory { get; set; }
        public virtual DbSet<tblUser> tblUser { get; set; }
        public virtual DbSet<tb_AdditionalJob> tb_AdditionalJob { get; set; }
        public virtual DbSet<TB_DEPT_EX> TB_DEPT_EX { get; set; }
        public virtual DbSet<tb_DeptLang> tb_DeptLang { get; set; }
        public virtual DbSet<TB_USER_EX> TB_USER_EX { get; set; }
        public virtual DbSet<tblLogging> tblLogging { get; set; }
        public virtual DbSet<tblMenu> tblMenu { get; set; }
        public virtual DbSet<TBL_BOARD> TBL_BOARD { get; set; }
        public virtual DbSet<TBL_BOARD_CATEGORY> TBL_BOARD_CATEGORY { get; set; }
        public virtual DbSet<TBL_BOARD_CNT> TBL_BOARD_CNT { get; set; }
        public virtual DbSet<TBL_BOARD_COMMENT> TBL_BOARD_COMMENT { get; set; }
        public virtual DbSet<TBL_BOARD_COMMENT_LIKE> TBL_BOARD_COMMENT_LIKE { get; set; }
        public virtual DbSet<TBL_BOARD_LIKE> TBL_BOARD_LIKE { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TBL_BANNERMAKER> TBL_BANNERMAKER { get; set; }
        public virtual DbSet<tblPreset> tblPreset { get; set; }
        public virtual DbSet<tblPresetTextBox> tblPresetTextBox { get; set; }
        public virtual DbSet<tblStatusGroupMapp> tblStatusGroupMapp { get; set; }
        public virtual DbSet<tblBanner> tblBanner { get; set; }
        public virtual DbSet<tblFiles> tblFiles { get; set; }
    
        public virtual ObjectResult<SP_ADM_sGROUPMASTERTestPG_Result> SP_ADM_sGROUPMASTERTestPG(string gROUPNAME, Nullable<int> cURRENTPAGE, Nullable<int> pAGE_COUNT)
        {
            var gROUPNAMEParameter = gROUPNAME != null ?
                new ObjectParameter("GROUPNAME", gROUPNAME) :
                new ObjectParameter("GROUPNAME", typeof(string));
    
            var cURRENTPAGEParameter = cURRENTPAGE.HasValue ?
                new ObjectParameter("CURRENTPAGE", cURRENTPAGE) :
                new ObjectParameter("CURRENTPAGE", typeof(int));
    
            var pAGE_COUNTParameter = pAGE_COUNT.HasValue ?
                new ObjectParameter("PAGE_COUNT", pAGE_COUNT) :
                new ObjectParameter("PAGE_COUNT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_sGROUPMASTERTestPG_Result>("SP_ADM_sGROUPMASTERTestPG", gROUPNAMEParameter, cURRENTPAGEParameter, pAGE_COUNTParameter);
        }
    
        public virtual ObjectResult<SP_ADM_sGROUPUSER_Result> SP_ADM_sGROUPUSER(string gROUPID)
        {
            var gROUPIDParameter = gROUPID != null ?
                new ObjectParameter("GROUPID", gROUPID) :
                new ObjectParameter("GROUPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_sGROUPUSER_Result>("SP_ADM_sGROUPUSER", gROUPIDParameter);
        }
    
        public virtual ObjectResult<SP_ADM_BOARD_CATEGORY_DETAIL_Result> SP_ADM_BOARD_CATEGORY_DETAIL(Nullable<int> cATEGORY_IDX)
        {
            var cATEGORY_IDXParameter = cATEGORY_IDX.HasValue ?
                new ObjectParameter("CATEGORY_IDX", cATEGORY_IDX) :
                new ObjectParameter("CATEGORY_IDX", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_BOARD_CATEGORY_DETAIL_Result>("SP_ADM_BOARD_CATEGORY_DETAIL", cATEGORY_IDXParameter);
        }
    
        public virtual ObjectResult<SP_ADM_BOARD_CATEGORY_EDIT_Result> SP_ADM_BOARD_CATEGORY_EDIT(Nullable<int> cATEGORY_IDX, string tYPE, string bOARD_NAME, string cOMMENT_YN, string mOVIE_YN, string uSE_YN, string bS_YN, string wRITE_YN, Nullable<int> bOARD_ORDER, string uPDATE_USER)
        {
            var cATEGORY_IDXParameter = cATEGORY_IDX.HasValue ?
                new ObjectParameter("CATEGORY_IDX", cATEGORY_IDX) :
                new ObjectParameter("CATEGORY_IDX", typeof(int));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var bOARD_NAMEParameter = bOARD_NAME != null ?
                new ObjectParameter("BOARD_NAME", bOARD_NAME) :
                new ObjectParameter("BOARD_NAME", typeof(string));
    
            var cOMMENT_YNParameter = cOMMENT_YN != null ?
                new ObjectParameter("COMMENT_YN", cOMMENT_YN) :
                new ObjectParameter("COMMENT_YN", typeof(string));
    
            var mOVIE_YNParameter = mOVIE_YN != null ?
                new ObjectParameter("MOVIE_YN", mOVIE_YN) :
                new ObjectParameter("MOVIE_YN", typeof(string));
    
            var uSE_YNParameter = uSE_YN != null ?
                new ObjectParameter("USE_YN", uSE_YN) :
                new ObjectParameter("USE_YN", typeof(string));
    
            var bS_YNParameter = bS_YN != null ?
                new ObjectParameter("BS_YN", bS_YN) :
                new ObjectParameter("BS_YN", typeof(string));
    
            var wRITE_YNParameter = wRITE_YN != null ?
                new ObjectParameter("WRITE_YN", wRITE_YN) :
                new ObjectParameter("WRITE_YN", typeof(string));
    
            var bOARD_ORDERParameter = bOARD_ORDER.HasValue ?
                new ObjectParameter("BOARD_ORDER", bOARD_ORDER) :
                new ObjectParameter("BOARD_ORDER", typeof(int));
    
            var uPDATE_USERParameter = uPDATE_USER != null ?
                new ObjectParameter("UPDATE_USER", uPDATE_USER) :
                new ObjectParameter("UPDATE_USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_BOARD_CATEGORY_EDIT_Result>("SP_ADM_BOARD_CATEGORY_EDIT", cATEGORY_IDXParameter, tYPEParameter, bOARD_NAMEParameter, cOMMENT_YNParameter, mOVIE_YNParameter, uSE_YNParameter, bS_YNParameter, wRITE_YNParameter, bOARD_ORDERParameter, uPDATE_USERParameter);
        }
    
        public virtual ObjectResult<SP_ADM_BOARD_CATEGORY_LIST_Result> SP_ADM_BOARD_CATEGORY_LIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_BOARD_CATEGORY_LIST_Result>("SP_ADM_BOARD_CATEGORY_LIST");
        }
    
        public virtual ObjectResult<SP_ADM_BOARD_CATEGORY_REG_Result> SP_ADM_BOARD_CATEGORY_REG(string tYPE, string bOARD_NAME, string cOMMENT_YN, string mOVIE_YN, string uSE_YN, string bS_YN, string wRITE_YN, Nullable<int> bOARD_ORDER, string iNPUT_USER)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var bOARD_NAMEParameter = bOARD_NAME != null ?
                new ObjectParameter("BOARD_NAME", bOARD_NAME) :
                new ObjectParameter("BOARD_NAME", typeof(string));
    
            var cOMMENT_YNParameter = cOMMENT_YN != null ?
                new ObjectParameter("COMMENT_YN", cOMMENT_YN) :
                new ObjectParameter("COMMENT_YN", typeof(string));
    
            var mOVIE_YNParameter = mOVIE_YN != null ?
                new ObjectParameter("MOVIE_YN", mOVIE_YN) :
                new ObjectParameter("MOVIE_YN", typeof(string));
    
            var uSE_YNParameter = uSE_YN != null ?
                new ObjectParameter("USE_YN", uSE_YN) :
                new ObjectParameter("USE_YN", typeof(string));
    
            var bS_YNParameter = bS_YN != null ?
                new ObjectParameter("BS_YN", bS_YN) :
                new ObjectParameter("BS_YN", typeof(string));
    
            var wRITE_YNParameter = wRITE_YN != null ?
                new ObjectParameter("WRITE_YN", wRITE_YN) :
                new ObjectParameter("WRITE_YN", typeof(string));
    
            var bOARD_ORDERParameter = bOARD_ORDER.HasValue ?
                new ObjectParameter("BOARD_ORDER", bOARD_ORDER) :
                new ObjectParameter("BOARD_ORDER", typeof(int));
    
            var iNPUT_USERParameter = iNPUT_USER != null ?
                new ObjectParameter("INPUT_USER", iNPUT_USER) :
                new ObjectParameter("INPUT_USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_BOARD_CATEGORY_REG_Result>("SP_ADM_BOARD_CATEGORY_REG", tYPEParameter, bOARD_NAMEParameter, cOMMENT_YNParameter, mOVIE_YNParameter, uSE_YNParameter, bS_YNParameter, wRITE_YNParameter, bOARD_ORDERParameter, iNPUT_USERParameter);
        }
    
        public virtual ObjectResult<SP_ADM_BOARD_CATEGORY_DEL_Result> SP_ADM_BOARD_CATEGORY_DEL(Nullable<int> cATEGORY_IDX)
        {
            var cATEGORY_IDXParameter = cATEGORY_IDX.HasValue ?
                new ObjectParameter("CATEGORY_IDX", cATEGORY_IDX) :
                new ObjectParameter("CATEGORY_IDX", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADM_BOARD_CATEGORY_DEL_Result>("SP_ADM_BOARD_CATEGORY_DEL", cATEGORY_IDXParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
